package com.company;


public class INTEGER_1 {
    public static void main(String[] args) {
        // Class INTEGER

        // 1. Максимальное значение (static	Int	MAX_VALUE)
        System.out.println("Максимальное значение Integer: " + Integer.MAX_VALUE);

        // 2. Минимальное значение (static	Int	MIN_VALUE)
        System.out.println("Минимальное значение Integer: " + Integer.MIN_VALUE);

        // 3. Число битов (static	Int	SIZE)
        System.out.println("Число битов в Integer: " + Integer.SIZE);

        // 4. Экземпляр класса, представляющий примитивный тип int. (static	Class<Integer>	TYPE)
        System.out.println("Экземпляр класса, представляющий примитивный тип: " + Integer.TYPE);

        // 5. Какое число больше
        Integer x = 100;
        Integer y = 200;
        System.out.println("Какое число больше: " + Integer.max(x, y));

        // 6. Есть 2 конструктора. Один принимает параметр int, другой - String
        //Integer(int value);
        //Integer(String s);

        // 7. Этот метод возвращает целочисленное значение, которое соответствует количеству единиц в
        // двоичном представлении числа-аргумента метода.
        System.out.println("Количество двоичных едениц в числе 5: " + Integer.bitCount(5));

        // 8. Возвращает значение объекта Integer в виде типа byte
        System.out.println("Возвращает значение объекта Integer в виде типа byte: " + x.byteValue());

        // Возвращает эквивалент объекта Integer типа double
        System.out.println("Возвращает значение объекта Integer в виде типа double: " + x.doubleValue());

        // Возвращает эквивалент объекта Integer в типе float.
        System.out.println("Возвращает значение объекта Integer в виде типа float: " + x.floatValue());

        // 9. Метод просто возвращает целочисленное представление результата сравнения
        // двух целочисленных аргументов.
        System.out.println("Метод просто возвращает целочисленное представление результата " +
                "сравнения двух целочисленных аргументов: " + Integer.compare(7, 8));

        // 10. Возвращает целочисленное значение результата сравнения аргумента метода и объекта Integer.
        int z = 300;
        System.out.println("Сравнивает Integer и int: " + x.compareTo(z)); // ыфзывать можно только от объекта, но
                                          // в параметры можно передавать либо объект, либо примитивный тип.

        // 11. Возвращает декодированное значение строкового аргумента в объект Integer.
        String str = "154786";
        System.out.println("Преобразовывает строку в число, с которым можно производить арифметические" +
                "операции: " + Integer.decode(str) + 1);

        // 12. Сравнивает на равенство 2 объекта типа Integer
        System.out.println("Сравнение x и y: " + x.equals(y));

        // 13. ВВозвращает хэш-код объекта Integer.
        System.out.println("Хэшкод объекта Integer: " + x.hashCode()); // просто возвращает 100, а не хэшкод.
                                  // Наверное не работает

        // 14. Преобразует строку-аргумент в десятичное число со знаком.
        System.out.println("Преобразует строку-аргумент в десятичное число со знаком: " + Integer.parseInt(str));

        // 15. Возвращает строковый эквивалент двоичного представления числа-аргумента.
        System.out.println("Возвращает строковый эквивалент двоичного представления числа-аргумента (int 5): " +
                Integer.toBinaryString(5));

        // 16. Возвращает строковое представление целочисленного аргумента в виде шестнадцатеричного числа без знака.
        System.out.println("Возвращает строковое представление целочисленного аргумента в виде шестнадцатеричного числа 17 без знака." +
                Integer.toHexString(17));

        // 17. Возвращает объект String, представляющий значение целочисленного аргумента.
        System.out.println("Возвращает объект String, представляющий значение целочисленного аргумента: " +
                Integer.toString(x));

        // 18. Возвращает экземпляр объекта Integer, представляющий указанное целое число.
        System.out.println("Теперь это объект: " + Integer.valueOf(5));

        // 19. Возвращает экземпляр объекта Integer, содержащий значение, указанное в строке-аргументе.
        System.out.println("Преобразует объект строки в объект Integer: " + Integer.valueOf(str));

    }
}
